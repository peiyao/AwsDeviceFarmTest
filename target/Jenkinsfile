node() {
  deleteDir()

  stage 'Checkout'
  checkout scm

  stage 'Create Env'
  def buildEnv = docker.build 'androidproject:latest', 'release'
  buildEnv.inside {
    // Create the key needed for building debug releases
    sh '''mkdir -p ?/.android
          keytool -genkey -v -keystore ?/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -dname "CN=Android Debug,O=Android,C=US"
       '''

    stage 'Build'
    sh './gradlew clean assembleDebug'
    archive '**/sampleApp.apk'

    stage 'Quality'
    sh './gradlew lint'
    stash includes: '*/build/outputs/lint-results*.xml', name: 'lint-reports'

    stage 'Test (unit)'
    try {
      sh './gradlew test'
    } catch (err) {
        currentBuild.result = 'UNSTABLE'
    }
    stash includes: '**/test-results/**/*.xml', name: 'junit-reports'

    stage 'Test (device)'
    sh '''./gradlew :app:assembleDebug
          ./gradlew :app:assembleDebugAndroidTest
       '''
    // Archive for downstream AWS job
    archive '**/sampleApp.apk'
  }
}

node() {
  build "${env.JOB_NAME} (AWS)"
}

stage 'Report'
node() {
  deleteDir()

  unstash 'junit-reports'
  step([$class: 'JUnitResultArchiver', testResults: '**/test-results/**/*.xml'])

  unstash 'lint-reports'
  step([$class: 'LintPublisher', canComputeNew: false, canRunOnFailed: true, defaultEncoding: '', healthy: '', pattern: '*/build/outputs/lint-results*.xml', unHealthy: ''])
}
